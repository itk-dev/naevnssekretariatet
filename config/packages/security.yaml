security:
    enable_authenticator_manager: true

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            custom_authenticators:
                - ItkDev\OpenIdConnectBundle\Security\CliLoginTokenAuthenticator
                - App\Security\AzureAdLoginAuthenticator
            entry_point: App\Security\AzureAdLoginAuthenticator
            logout:
                path: app_logout

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    role_hierarchy:
        ROLE_BOARD_MEMBER:
        ROLE_CITIZEN:
        ROLE_CASEWORKER: [ROLE_USER]
        ROLE_ADMINISTRATION: [ROLE_USER]
        ROLE_ADMIN: [ROLE_CASEWORKER, ROLE_ADMINISTRATION]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN]
    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/openidconnect/login(/.+)?$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin, roles: [ROLE_CASEWORKER, ROLE_ADMINISTRATION] }
        - { path: ^/, roles: [ROLE_USER] }
        # - { path: ^/profile, roles: ROLE_USER }
