on: pull_request
name: Build Release
jobs:
  composer-install:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: true
      matrix:
        php: ['7.4']
    name: Validate composer (${{ matrix.php}})
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php}}
          extensions: apcu, ctype, iconv, imagick, json, redis, soap, xmlreader, zip
          coverage: none
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ matrix.php }}-composer-
      - name: Validate composer files
        run: composer validate composer.json
      - name: Composer install with exported .env variables
        run: |
          set -a && source .env && set +a
          APP_ENV=prod composer install --no-dev -o

  yarn-install:
    needs: composer-install
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Yarn install
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - run: yarn install
      - name: Yarn build
        run: yarn run encore production

  unit_tests:
    needs: yarn-install
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: true
      matrix:
        php: ['7.4']
    name: Unit tests (${{ matrix.php}})
    steps:
      - name: Unit tests
        run: phpdbg -qrr ./bin/phpunit --coverage-clover=coverage/unit.xml

  end-to-end-tests:
    needs: unit_tests
    runs-on: ubuntu-20.04
    env:
      DATABASE_URL: mysql://db:db@127.0.0.1:3306/db?serverVersion=mariadb-10.3.17&charset=utf8mb4
    services:
      mariadb:
        image: mariadb:10.3
        env:
          MYSQL_USER: db
          MYSQL_PASSWORD: db
          MYSQL_DATABASE: db
          MYSQL_ROOT_PASSWORD: db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      fail-fast: true
      matrix:
        php: [ '7.4' ]
    steps:
      - name: Run local server
        run: symfony server:start --no-tls --port=8000 -d
      #  @TODO Re-enable when migrations and fixtures are added
      #- name: Run Doctrine Migrations
      #  run: php bin/console doctrine:migrations:migrate --no-interaction
      #- name: Load Fixtures
      #  run: php bin/console hautelook:fixtures:load --purge-with-truncate --no-interaction
      - name: Cypress
        uses: cypress-io/github-action@v2
        env:
          CYPRESS_baseUrl: http://127.0.0.1:8000

  package:
    needs: end-to-end-tests
    runs-on: ubuntu-20.04
    steps:
      - name: Build package
        run: |
          rm -rf ./node_modules
          rm -rf ./var/cache/dev
          mkdir -p ./build
          tar -zcvf ./build/TVIST1-$GITHUB_SHA.tar.gz -C .
          ls -la
