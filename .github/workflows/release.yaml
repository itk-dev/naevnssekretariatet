on: pull_request
name: Build Release
jobs:
  composer-install:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: true
      matrix:
        php: ['7.4']
    name: Composer install (${{ matrix.php}})
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php}}
          extensions: apcu, ctype, iconv, imagick, json, redis, soap, xmlreader, zip
          coverage: none
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ matrix.php }}-composer-
      - name: Validate composer files
        run: composer validate composer.json
      - name: Composer install with exported .env variables
        run: |
          set -a && source .env && set +a
          APP_ENV=prod composer install --no-dev -o

  yarn-install:
    needs: composer-install
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: true
    name: Yarn install (${{ matrix.php}})
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Yarn install
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - run: yarn install
      - name: Yarn build
        run: yarn run encore production

  package:
    needs: yarn-install
    runs-on: ubuntu-20.04
    steps:
      - name: Build package
        run: |
          rm -rf ./node_modules
          rm -rf ./var/cache/dev
          mkdir -p ./build
          tar -zcvf ./build/TVIST1-$GITHUB_SHA.tar.gz -C .
          ls -la
